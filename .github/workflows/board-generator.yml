name: Update issues board

on:
  issues:
    types: [opened, edited, closed, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch all issues
        uses: actions/github-script@v7
        id: fetch
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'all',
                per_page: 100
              }
            );
            
            const { data: projects } = await github.rest.projects.listForRepo({ owner, repo });
            const project = projects.find(p => p.name === 'My Board');
            const { data: columns } = await github.rest.projects.listColumns({ project_id: project.id });
            const boardMap = {};
            for (let col of columns) {
              const { data: cards } = await github.rest.projects.listCards({ column_id: col.id, per_page:100 });
              for (let card of cards) {
                if (card.content_url?.includes('/issues/')) {
                  const num = +card.content_url.split('/').pop();
                  boardMap[num] = col.name;
                }
              }
            }
            
            const enriched = issues.map(i => ({
              number: i.number,
              title:  i.title,
              state:  i.state,
              body:   i.body,
              column: boardMap[i.number] || 'Unassigned'
            }));
            return JSON.stringify(enriched, null, 2);

      - name: Write data file
        run: |
          echo '${{ steps.fetch.outputs.result }}' > board/_data/issues.json

      - name: Commit & push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add _data/issues.json
          git diff --quiet || git commit -m "chore: update issues data"
          git push
